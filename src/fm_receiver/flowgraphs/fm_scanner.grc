options:
  parameters:
    author: hamza
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: fm_scanner
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fft_size
  id: variable
  parameters:
    comment: ''
    value: 2**10
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 12.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: 87.7*10**6
    step: 200*10**3
    stop: 107.9*10**6
    value: 87.7*10**6
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_wfm_rcv_0
  id: analog_wfm_rcv
  parameters:
    affinity: ''
    alias: ''
    audio_decimation: '4'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    quad_rate: 48*10**3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 268.0]
    rotation: 0
    state: true
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 276.0]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fft_size
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 508.0]
    rotation: 0
    state: true
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: fft_size
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 492.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fft_size
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [112, 512.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\n\nclass blk(gr.sync_block):\n    def __init__(self,\
      \ threshold_value=0.5, vector_length=1024):\n        \"\"\"\n        Args:\n\
      \            threshold_value: Threshold below which values are zeroed.\n   \
      \         vector_length: Length of the float vector.\n        \"\"\"\n     \
      \   gr.sync_block.__init__(\n            self,\n            name='Vector Threshold',\n\
      \            in_sig=[(np.float32, vector_length)],\n            out_sig=[(np.float32,\
      \ vector_length)],\n        )\n        self.threshold = threshold_value\n  \
      \      self.vector_length = vector_length\n\n    def work(self, input_items,\
      \ output_items):\n        in0 = input_items[0]\n        out = output_items[0]\n\
      \n        # Apply thresholding: zero values below threshold\n        out[:]\
      \ = np.where(in0 >= self.threshold, in0, 0.0)\n\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold_value: '-12'
    vector_length: fft_size
  states:
    _io_cache: '(''Vector Threshold'', ''blk'', [(''threshold_value'', ''0.5''), (''vector_length'',
      ''1024'')], [(''0'', ''float'', 1024)], [(''0'', ''float'', 1024)], ''\n        Args:\n            threshold_value:
      Threshold below which values are zeroed.\n            vector_length: Length
      of the float vector.\n        '', [''vector_length''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 500.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_size
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.blackmanharris(fft_size)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 476.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_1
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    average: '0.1'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 372.0]
    rotation: 0
    state: true
- name: qtgui_vector_sink_f_0_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.05'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Custom"'
    nconnections: '1'
    ref_level: '0'
    showports: 'False'
    update_time: '0.10'
    vlen: fft_size
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"x-Axis"'
    x_start: '0'
    x_step: '1.0'
    x_units: '""'
    y_axis_label: '"y-Axis"'
    y_units: '""'
    ymax: '0'
    ymin: '-20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 476.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '32'
    fbw: '0'
    interp: '3'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 252.0]
    rotation: 0
    state: true
- name: single_pole_iir_filter_xx_0
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fft_size
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 500.0]
    rotation: 0
    state: true
- name: soapy_rtlsdr_source_0
  id: soapy_rtlsdr_source
  parameters:
    affinity: ''
    agc: 'True'
    alias: ''
    center_freq: freq
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: '20'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: 2.048*10**6
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 284.0]
    rotation: 0
    state: true

connections:
- [analog_wfm_rcv_0, '0', audio_sink_0, '0']
- [blocks_complex_to_mag_squared_0, '0', single_pole_iir_filter_xx_0, '0']
- [blocks_nlog10_ff_0, '0', epy_block_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0, '0']
- [epy_block_0, '0', qtgui_vector_sink_f_0_0, '0']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [rational_resampler_xxx_0, '0', analog_wfm_rcv_0, '0']
- [single_pole_iir_filter_xx_0, '0', blocks_nlog10_ff_0, '0']
- [soapy_rtlsdr_source_0, '0', blocks_stream_to_vector_0, '0']
- [soapy_rtlsdr_source_0, '0', qtgui_freq_sink_x_1, '0']
- [soapy_rtlsdr_source_0, '0', rational_resampler_xxx_0, '0']

metadata:
  file_format: 1
